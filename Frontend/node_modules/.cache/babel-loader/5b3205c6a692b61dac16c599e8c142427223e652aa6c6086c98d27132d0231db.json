{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Critical Alert email sysytem\\\\Frontend\\\\src\\\\MultiStepForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Step1 from './components/Step1';\nimport Step2 from './components/Step2';\nimport Step3 from './components/Step3';\nimport EmailPreview from './components/EmailPreview';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MultiStepForm = () => {\n  _s();\n  const [step, setStep] = useState(1);\n  const [formData, setFormData] = useState({});\n  const [showPreview, setShowPreview] = useState(false);\n  const [previewData, setPreviewData] = useState({});\n  const [groups, setGroups] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Fetch groups from API on component mount\n  useEffect(() => {\n    setIsLoading(true);\n    fetch('http://localhost:5000/api/email/groups').then(response => {\n      if (!response.ok) throw new Error('Failed to fetch groups');\n      return response.json();\n    }).then(data => {\n      setGroups(data.map(group => group.name));\n      console.log('Fetched groups:', data.map(group => group.name)); // Debug log\n    }).catch(error => {\n      console.error('Error fetching groups:', error);\n    }).finally(() => setIsLoading(false));\n  }, []);\n\n  // Handle input changes across all steps\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Fetch to and cc emails for the selected recipient group\n  const fetchGroupEmails = async groupName => {\n    setIsLoading(true);\n    try {\n      const response = await fetch(`http://localhost:5000/api/email/groups?name=${encodeURIComponent(groupName || '')}`);\n      if (!response.ok) throw new Error('Server error');\n      const groups = await response.json();\n      const emails = groups.length > 0 ? {\n        to: groups[0].to,\n        cc: groups[0].cc\n      } : {\n        to: 'N/A',\n        cc: 'N/A'\n      };\n      console.log('Fetched emails for group', groupName, ':', emails); // Debug log\n      return emails;\n    } catch (error) {\n      console.error('Fetch error:', error);\n      return {\n        to: 'N/A',\n        cc: 'N/A'\n      };\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Handle preview generation from Step 3\n  const handlePreview = async () => {\n    if (!formData.recipient_group) {\n      alert('Please select a recipient group in Step 1.');\n      return;\n    }\n    const emails = await fetchGroupEmails(formData.recipient_group);\n    setPreviewData({\n      ...formData,\n      ...emails\n    });\n    setShowPreview(true);\n  };\n\n  // Handle send action from preview\n  const handleSend = () => {\n    console.log('Sending email with data:', previewData);\n    // Add your email sending logic here (e.g., API call to send email)\n    alert('Email sent successfully!');\n    setShowPreview(false);\n    // Optionally reset form or navigate\n  };\n\n  // Handle close preview\n  const handleClose = () => {\n    setShowPreview(false);\n  };\n\n  // Navigate to next step\n  const nextStep = () => setStep(prev => prev + 1);\n\n  // Navigate to previous step\n  const prevStep = () => setStep(prev => prev - 1);\n\n  // Render preview if shown\n  if (showPreview) {\n    return /*#__PURE__*/_jsxDEV(EmailPreview, {\n      data: previewData,\n      onClose: handleClose,\n      onSend: handleSend,\n      isLoading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Render loading state\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading groups...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Render steps based on current step\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: '600px',\n      margin: '0 auto',\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"NOC Email Sender\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px solid #ccc',\n        padding: '20px',\n        borderRadius: '8px'\n      },\n      children: [step === 1 && /*#__PURE__*/_jsxDEV(Step1, {\n        formData: formData,\n        handleChange: handleChange,\n        groups: groups,\n        nextStep: nextStep\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 24\n      }, this), step === 2 && /*#__PURE__*/_jsxDEV(Step2, {\n        formData: formData,\n        handleChange: handleChange,\n        nextStep: nextStep,\n        prevStep: prevStep\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 24\n      }, this), step === 3 && /*#__PURE__*/_jsxDEV(Step3, {\n        formData: formData,\n        handleChange: handleChange,\n        prevStep: prevStep,\n        handlePreview: handlePreview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(MultiStepForm, \"toEDR2or4l78UvLh4IYTtt7uI8M=\");\n_c = MultiStepForm;\nexport default MultiStepForm;\nvar _c;\n$RefreshReg$(_c, \"MultiStepForm\");","map":{"version":3,"names":["React","useState","useEffect","Step1","Step2","Step3","EmailPreview","jsxDEV","_jsxDEV","MultiStepForm","_s","step","setStep","formData","setFormData","showPreview","setShowPreview","previewData","setPreviewData","groups","setGroups","isLoading","setIsLoading","fetch","then","response","ok","Error","json","data","map","group","name","console","log","catch","error","finally","handleChange","e","value","target","prev","fetchGroupEmails","groupName","encodeURIComponent","emails","length","to","cc","handlePreview","recipient_group","alert","handleSend","handleClose","nextStep","prevStep","onClose","onSend","fileName","_jsxFileName","lineNumber","columnNumber","children","style","maxWidth","margin","padding","border","borderRadius","_c","$RefreshReg$"],"sources":["D:/Projects/Critical Alert email sysytem/Frontend/src/MultiStepForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Step1 from './components/Step1';\r\nimport Step2 from './components/Step2';\r\nimport Step3 from './components/Step3';\r\nimport EmailPreview from './components/EmailPreview';\r\n\r\nconst MultiStepForm = () => {\r\n  const [step, setStep] = useState(1);\r\n  const [formData, setFormData] = useState({});\r\n  const [showPreview, setShowPreview] = useState(false);\r\n  const [previewData, setPreviewData] = useState({});\r\n  const [groups, setGroups] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  // Fetch groups from API on component mount\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    fetch('http://localhost:5000/api/email/groups')\r\n      .then(response => {\r\n        if (!response.ok) throw new Error('Failed to fetch groups');\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        setGroups(data.map(group => group.name));\r\n        console.log('Fetched groups:', data.map(group => group.name)); // Debug log\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching groups:', error);\r\n      })\r\n      .finally(() => setIsLoading(false));\r\n  }, []);\r\n\r\n  // Handle input changes across all steps\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  // Fetch to and cc emails for the selected recipient group\r\n  const fetchGroupEmails = async (groupName) => {\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/email/groups?name=${encodeURIComponent(groupName || '')}`);\r\n      if (!response.ok) throw new Error('Server error');\r\n      const groups = await response.json();\r\n      const emails = groups.length > 0 ? { to: groups[0].to, cc: groups[0].cc } : { to: 'N/A', cc: 'N/A' };\r\n      console.log('Fetched emails for group', groupName, ':', emails); // Debug log\r\n      return emails;\r\n    } catch (error) {\r\n      console.error('Fetch error:', error);\r\n      return { to: 'N/A', cc: 'N/A' };\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle preview generation from Step 3\r\n  const handlePreview = async () => {\r\n    if (!formData.recipient_group) {\r\n      alert('Please select a recipient group in Step 1.');\r\n      return;\r\n    }\r\n    const emails = await fetchGroupEmails(formData.recipient_group);\r\n    setPreviewData({ ...formData, ...emails });\r\n    setShowPreview(true);\r\n  };\r\n\r\n  // Handle send action from preview\r\n  const handleSend = () => {\r\n    console.log('Sending email with data:', previewData);\r\n    // Add your email sending logic here (e.g., API call to send email)\r\n    alert('Email sent successfully!');\r\n    setShowPreview(false);\r\n    // Optionally reset form or navigate\r\n  };\r\n\r\n  // Handle close preview\r\n  const handleClose = () => {\r\n    setShowPreview(false);\r\n  };\r\n\r\n  // Navigate to next step\r\n  const nextStep = () => setStep(prev => prev + 1);\r\n\r\n  // Navigate to previous step\r\n  const prevStep = () => setStep(prev => prev - 1);\r\n\r\n  // Render preview if shown\r\n  if (showPreview) {\r\n    return <EmailPreview data={previewData} onClose={handleClose} onSend={handleSend} isLoading={isLoading} />;\r\n  }\r\n\r\n  // Render loading state\r\n  if (isLoading) {\r\n    return <div>Loading groups...</div>;\r\n  }\r\n\r\n  // Render steps based on current step\r\n  return (\r\n    <div style={{ maxWidth: '600px', margin: '0 auto', padding: '20px' }}>\r\n      <h1>NOC Email Sender</h1>\r\n      <div style={{ border: '1px solid #ccc', padding: '20px', borderRadius: '8px' }}>\r\n        {step === 1 && <Step1 formData={formData} handleChange={handleChange} groups={groups} nextStep={nextStep} />}\r\n        {step === 2 && <Step2 formData={formData} handleChange={handleChange} nextStep={nextStep} prevStep={prevStep} />}\r\n        {step === 3 && <Step3 formData={formData} handleChange={handleChange} prevStep={prevStep} handlePreview={handlePreview} />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MultiStepForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}